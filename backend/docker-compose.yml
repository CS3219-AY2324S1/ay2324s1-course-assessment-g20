version: '3'
services:
  http-gateway:
    build:
      context: .
      dockerfile: ./apps/http-gateway/Dockerfile
      target: dev
    image: chownces/backend-http-gateway
    depends_on:
      sql-migrations:
        condition: service_completed_successfully
    ports:
      - ${HTTP_GATEWAY_PORT}:${HTTP_GATEWAY_PORT}
    networks:
      - backend
    env_file:
      .env.docker

  question:
    build:
      context: .
      dockerfile: ./apps/question/Dockerfile
    image: chownces/backend-question
    depends_on:
      sql-migrations:
        condition: service_completed_successfully
    networks:
      - backend
    env_file: .env.docker

  user:
    build:
      context: .
      dockerfile: ./apps/user/Dockerfile
    image: chownces/backend-user
    depends_on:
      sql-migrations:
        condition: service_completed_successfully
    networks:
      - backend
    env_file: .env.docker

  postgres:
    image: postgres:14.1-alpine
    restart: always
    volumes:
      - ./postgres-data:/var/lib/postgresql/data # Persist data between restarts
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - backend
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      - backend
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 20s
      retries: 5
      start_period: 20s

  sql-migrations:
    build:
      context: .
      dockerfile: ./scripts/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    env_file: .env.docker
    environment:
      - QUESTION_SERVICE_MONGODB_URL=mongodb://root:root@mongo:27017/peer-prep-question?authMechanism=DEFAULT
    networks:
      - backend

networks:
  backend:
    driver: bridge
