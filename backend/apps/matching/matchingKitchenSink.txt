How to implement matching service? (General Idea)
-> Idea use websockets to connect with users requesting to match
-> Write to DB on match parameters, userid and date
-> Store websocket connection in memory, using user id as key
-> DB is periodically checked for matches
-> If match is found, verify that both users are still connected, if so, send message to both users
-> If one user is not connected, remove matching entry of unconnected user from DB and continue checking for matches

How do users get notified of a match?
-> When a match is found, send a message to both users via websocket
-> Clear matching respective entries from DB

Matching Algorithm: How to ensure fairness?
-> Use a FIFO, users with oldest matching info are matched first

Matching Algo: Implementation:
-> User create a matching request
-> Matching request is sent to matching service via websocket
-> Check DB for matching entry
-> If match is found, send message to both users
-> If match is not found, store matching entry in DB
-> Wait for other users to request matching



-> Get oldest matching entry from DB (if connected = true)
-> Find a match for this entry
-> If match is found
  -> check if both users are still connected
    -> If both users are connected, 
      -> send message to both users
      -> remove matching info from DB
    -> Else if either user is not connected, 
      -> Set that user's matching entry as unconnected in DB
-> Else if match is not found
  -> Update matching entry in DB with new timestamp
-> Continue checking for matches

What does the matching service DB store for each matching entry?
-> User ID, match parameters, date of request, is_connected

What happens matching service shuts down?
-> All websocket connections are lost
-> Users have to retry matching
-> When user tries to use matching service, we can check DB to see if they have matching info stored (via REST API)
-> set matching entry as connected if required
-> If so, prepopulate matching screen with old matching parameters
-> They can then choose to update matching parameters and retry matching
-> Otherwise, starting a new matching session from scratch (overwrite old info in DB)

How to prevent race conditions? (I.e when user tries to rewrite matching parameters while matching service is trying to find a match for them) 
-> Use database advisory locks
